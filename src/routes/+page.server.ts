import { redirect } from '@sveltejs/kit';

export const config = {
	isr: {
		// Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.
		// Setting the value to `false` means it will never expire.
		expiration: false,

		// Random token that can be provided in the URL to bypass the cached version of the asset, by requesting the asset
		// with a __prerender_bypass=<token> cookie.
		//
		// Making a `GET` or `HEAD` request with `x-prerender-revalidate: <token>` will force the asset to be re-validated.
		bypassToken: 'BYPASSBYPASSBYPASSBYPASS',

		// List of valid query parameters. Other parameters (such as utm tracking codes) will be ignored,
		// ensuring that they do not result in content being regenerated unnecessarily
		allowQuery: ['q']
	}
};

export const load = async ({ url }) => {
	const q = url.searchParams.get('q');
	if (q) {
		redirect(302, `https://kagi.com/search?q=${q}`);
	}
};
